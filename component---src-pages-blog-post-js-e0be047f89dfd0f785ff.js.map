{"version":3,"sources":["webpack:///./src/pages/blogPost.js","webpack:///./src/components/link.js","webpack:///./src/components/appbar.js","webpack:///./src/components/SEO.js","webpack:///./src/components/tags.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_components_appbar__WEBPACK_IMPORTED_MODULE_2__","prismjs__WEBPACK_IMPORTED_MODULE_3__","prismjs__WEBPACK_IMPORTED_MODULE_3___default","_components_tags__WEBPACK_IMPORTED_MODULE_4__","_components_SEO__WEBPACK_IMPORTED_MODULE_8__","randomColors","Template","props","title","data","markdownRemark","frontmatter","date","tags","html","useEffect","Prism","highlightAll","a","createElement","charSet","className","content","glow","dangerouslySetInnerHTML","__html","Intent","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_1___default","_ref","children","to","cover","bg","activeStyle","color","style","Appbar","_link__WEBPACK_IMPORTED_MODULE_1__","SEO","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","render","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","site","siteMetadata","description","_public_static_d_3641805551_json__WEBPACK_IMPORTED_MODULE_0__","Tags","map","text","i","randomColor","Math","floor","random","length","boxShadow","undefined","key","borderColor"],"mappings":"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","file":"component---src-pages-blog-post-js-e0be047f89dfd0f785ff.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport { Helmet } from \"react-helmet\"\nimport Appbar from \"../components/appbar\"\nimport Prism from 'prismjs'\nimport Tags from '../components/tags'\nimport \"github-markdown-css/github-markdown.css\"\nimport \"prismjs/themes/prism-okaidia.css\"\nimport \"../blog.css\"\nimport SEO from \"../components/SEO\"\n\nlet randomColors = [\"#27fb6b\", \"#0adbcd\", \"#ff2e63\", \"#f1e05a\"]\nconst Template = (props) => {\n    // console.log(props)\n    // return (\n    //     <h1>Works!</h1>\n    // )\n    const title = props.data.markdownRemark.frontmatter.title\n    const date = props.data.markdownRemark.frontmatter.date\n    const tags = props.data.markdownRemark.frontmatter.tags\n\n    const html = props.data.markdownRemark.html\n    useEffect(() => {\n      Prism.highlightAll();\n    })\n    return (\n        <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{title} | Kaustubh</title>\n        </Helmet>\n        <SEO title={`${title} | Kaustubh`} />\n        <Appbar />\n        <div className=\"blog-container\">\n            <div className=\"text-center\">\n              <h1 className=\"\">{title}</h1>\n              <p className=\"\">Published on {date}</p>\n              <p className=\"\"><Tags content={tags} glow={false} randomColors={randomColors} /></p>\n            </div>\n            <div className=\"markdown-body\" dangerouslySetInnerHTML={{__html: html}}></div>\n        </div>\n        </div>\n    )\n}\n\nexport const query = graphql`\n  query($pathSlug: String) {\n    markdownRemark(frontmatter: { path: {eq: $pathSlug} }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n\nexport default Template\n","import React from \"react\"\nimport Link from \"gatsby-plugin-transition-link/AniLink\"\n\nexport default function Intent({ children, to }) {\n  return (\n    <Link\n      cover bg=\"#FF8A00\"\n      className=\"nav-link\"\n      to={to}\n      activeStyle={{\n        color: \"white\",\n      }}\n      style={{\n        color: \"grey\",\n      }}\n    >\n      {children}\n    </Link>\n  )\n}\n","import React from \"react\"\nimport Intent from \"./link\"\n\nexport default function Appbar() {\n  return (\n    <div className=\"container my-3\">\n      <ul className=\"nav justify-content-center\">\n        <li className=\"nav-item mx-4\">\n          <Intent to=\"/\">Home</Intent>\n        </li>\n        <li className=\"nav-item mx-4\">\n          <Intent to=\"/projects\">Projects</Intent>\n        </li>\n        <li className=\"nav-item mx-4\">\n          <Intent to=\"/work-experience\">Experience</Intent>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO(props) {\n    return (\n        <StaticQuery\n            query={\n                graphql`\n                    query HeadingQuery {\n                        site {\n                            siteMetadata {\n                                description\n                            }\n                        }\n                    }\n                `}\n            render = {data => (\n                <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{props.title}</title>\n                <meta name=\"description\" content={data.site.siteMetadata.description} />\n                </Helmet>\n            )}\n        />\n    )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n      }\n    }\n  }\n`\n\nexport default SEO\n","import React from \"react\"\n\nfunction Tags(props){\n    const {content, randomColors, glow} = props\n    let contentTags = []\n    // console.log('glow',glow);\n    return content.map((text, i) => {\n        let randomColor = randomColors[Math.floor(Math.random()*randomColors.length)]\n        let boxShadow = (glow === undefined || glow === true) ? `0 0 10px ${randomColor}` : \"none\"\n        return (\n            <div className=\"tag\" key={i} style={{ color: randomColor, borderColor: randomColor, boxShadow: boxShadow }}>{text}</div>\n        )\n    })\n}\n\nexport default Tags\n"],"sourceRoot":""}