{"version":3,"sources":["webpack:///./src/pages/blogPost.js","webpack:///./src/components/link.js","webpack:///./src/components/appbar.js","webpack:///./src/components/tags.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_components_appbar__WEBPACK_IMPORTED_MODULE_2__","prismjs__WEBPACK_IMPORTED_MODULE_3__","prismjs__WEBPACK_IMPORTED_MODULE_3___default","_components_tags__WEBPACK_IMPORTED_MODULE_4__","randomColors","Template","props","title","data","markdownRemark","frontmatter","date","tags","html","useEffect","Prism","highlightAll","a","createElement","charSet","className","content","glow","dangerouslySetInnerHTML","__html","Intent","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_1___default","_ref","children","to","cover","bg","activeStyle","color","style","Appbar","_link__WEBPACK_IMPORTED_MODULE_1__","Tags","contentTags","console","log","i","length","text","randomColor","Math","floor","random","boxShadow","undefined","push","borderColor"],"mappings":"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","file":"component---src-pages-blog-post-js-2fe0246748f6909fdd49.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport { Helmet } from \"react-helmet\"\nimport Appbar from \"../components/appbar\"\nimport Prism from 'prismjs'\nimport Tags from '../components/tags'\nimport \"github-markdown-css/github-markdown.css\"\nimport \"prismjs/themes/prism-okaidia.css\"\nimport \"../blog.css\"\n\nlet randomColors = [\"#27fb6b\", \"#0adbcd\", \"#ff2e63\", \"#f1e05a\"]\nconst Template = (props) => {\n    // console.log(props)\n    // return (\n    //     <h1>Works!</h1>\n    // )\n    const title = props.data.markdownRemark.frontmatter.title\n    const date = props.data.markdownRemark.frontmatter.date\n    const tags = props.data.markdownRemark.frontmatter.tags\n    \n    const html = props.data.markdownRemark.html\n    useEffect(() => {\n      Prism.highlightAll();\n    })\n    return (\n        <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{title} | Kaustubh</title>\n        </Helmet>\n        <Appbar />\n        <div className=\"blog-container\">\n            <div className=\"text-center\">\n              <h1 className=\"\">{title}</h1>\n              <p className=\"\">Published on {date}</p>\n              <p className=\"\"><Tags content={tags} glow={false} randomColors={randomColors} /></p>\n            </div>\n            <div className=\"markdown-body\" dangerouslySetInnerHTML={{__html: html}}></div>\n        </div>\n        </div>\n    )\n}\n\nexport const query = graphql`\n  query($pathSlug: String) {\n    markdownRemark(frontmatter: { path: {eq: $pathSlug} }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n\nexport default Template","import React from \"react\"\nimport Link from \"gatsby-plugin-transition-link/AniLink\"\n\nexport default function Intent({ children, to }) {\n  return (\n    <Link\n      cover bg=\"#FF8A00\"\n      className=\"nav-link\"\n      to={to}\n      activeStyle={{\n        color: \"white\",\n      }}\n      style={{\n        color: \"grey\",\n      }}\n    >\n      {children}\n    </Link>\n  )\n}\n","import React from \"react\"\nimport Intent from \"./link\"\n\nexport default function Appbar() {\n  return (\n    <div className=\"container my-3\">\n      <ul className=\"nav justify-content-center\">\n        <li className=\"nav-item mx-4\">\n          <Intent to=\"/\">Home</Intent>\n        </li>\n        <li className=\"nav-item mx-4\">\n          <Intent to=\"/projects\">Projects</Intent>\n        </li>\n        <li className=\"nav-item mx-4\">\n          <Intent to=\"/work-experience\">Experience</Intent>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import React from \"react\"\n\nfunction Tags(props){\n    const {content, randomColors, glow} = props\n    let contentTags = []\n    console.log('glow',glow);\n    for(let i=0; i<content.length; i++){\n      let text = content[i]\n      let randomColor = randomColors[Math.floor(Math.random()*randomColors.length)]\n      let boxShadow = (glow === undefined || glow === true) ? `0 0 10px ${randomColor}` : \"none\"\n      contentTags.push(<div className=\"tag\" style={{ color: randomColor, borderColor: randomColor, boxShadow: boxShadow }}>{text}</div>)\n    }\n    return contentTags\n}\n\nexport default Tags"],"sourceRoot":""}